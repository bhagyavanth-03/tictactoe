import random

def print_board(board):
    for row in board:
        print(" | ".join(row))
        print("-" * 9)

def check_winner(board, player):
    for row in board:
        if all(cell == player for cell in row):
            return True

    for col in range(3):
        if all(board[row][col] == player for row in range(3)):
            return True

    if all(board[i][i] == player for i in range(3)) or all(board[i][2-i] == player for i in range(3)):
        return True

    return False

def is_board_full(board):
    return all(all(cell != " " for cell in row) for row in board)

def player_move(board):
    while True:
        try:
            row = int(input("Enter the row (0-2): "))
            col = int(input("Enter the column (0-2): "))
            if board[row][col] == " ":
                board[row][col] = "X"
                break
            else:
                print("That cell is already taken. Try again.")
        except (ValueError, IndexError):
            print("Invalid input. Please enter valid row and column numbers.")

def computer_move(board):
    empty_cells = [(row, col) for row in range(3) for col in range(3) if board[row][col] == " "]
    row, col = random.choice(empty_cells)
    board[row][col] = "O"

def play_tic_tac_toe():
    board = [[" " for _ in range(3)] for _ in range(3)]

    print("Welcome to Tic Tac Toe!")
    print_board(board)

    while True:
        player_move(board)
        print_board(board)

        if check_winner(board, "X"):
            print("Congratulations! You won!")
            break

        if is_board_full(board):
            print("It's a tie!")
            break

        computer_move(board)
        print_board(board)

        if check_winner(board, "O"):
            print("You lost! The computer won.")
            break

        if is_board_full(board):
            print("It's a tie!")
            break

if _name_ == "_main_":
    play_tic_tac_toe()
